/*
 * This file is generated by jOOQ.
 */
package eu.catalkaya.pokertracker.database.tables.records;


import eu.catalkaya.pokertracker.database.tables.Transactions;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TransactionsRecord extends UpdatableRecordImpl<TransactionsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>TRANSACTIONS.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>TRANSACTIONS.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>TRANSACTIONS.PLAYER_ID</code>.
     */
    public void setPlayerId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>TRANSACTIONS.PLAYER_ID</code>.
     */
    public Integer getPlayerId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>TRANSACTIONS.AMOUNT</code>.
     */
    public void setAmount(Float value) {
        set(2, value);
    }

    /**
     * Getter for <code>TRANSACTIONS.AMOUNT</code>.
     */
    public Float getAmount() {
        return (Float) get(2);
    }

    /**
     * Setter for <code>TRANSACTIONS.CREATED_AT</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>TRANSACTIONS.CREATED_AT</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>TRANSACTIONS.COMMENT</code>.
     */
    public void setComment(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>TRANSACTIONS.COMMENT</code>.
     */
    public String getComment() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionsRecord
     */
    public TransactionsRecord() {
        super(Transactions.TRANSACTIONS);
    }

    /**
     * Create a detached, initialised TransactionsRecord
     */
    public TransactionsRecord(Integer id, Integer playerId, Float amount, LocalDateTime createdAt, String comment) {
        super(Transactions.TRANSACTIONS);

        setId(id);
        setPlayerId(playerId);
        setAmount(amount);
        setCreatedAt(createdAt);
        setComment(comment);
        resetChangedOnNotNull();
    }
}
